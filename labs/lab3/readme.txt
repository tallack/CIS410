As we predicted in our tauTest.c file, thread 0 had the quickest computation time, then thread 1 had the second quickest computation time.. and so on (with the third thread having the longest computation time). When examining the code, this makes sense since the load is quite imbalanced between the four threads. Its nice that we are actually getting proper compuatation times when compared to each thread, more specefically that thread 0 isnt taking longer than any other thread, which would contradict our prediction (David said that this had happened in some of the other labs). 
